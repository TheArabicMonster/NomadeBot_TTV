/**
 * Messages et textes utilis√©s par le bot
 */

// Messages p√©riodiques al√©atoires
const periodicMessages = [
  "üëÜ Cette personne est de m√®che ü§ù avec Xi Jinping üêâ ‚òùÔ∏è",
  "üëÜ Cet utilisateur soutient üó≥Ô∏è le PCC üá®üá≥ ‚òùÔ∏èü§î",
  "üëÜ ‚ö†Ô∏è Soup√ßonn√© de trahison ü§´ envers l'humanit√© üåç ‚ö†Ô∏è ‚òùÔ∏è",
  "üëÜ ü§° Candidat officiel üéñÔ∏è pour les Darwin Awards üí• ‚òùÔ∏èüèÜ",
  "üëÜ üíÄ A vendu son √¢me üßæ pour quelques skins CS:GO üî™ ‚òùÔ∏èüí∞",
  "üëÜ üß† A un QI n√©gatif üìâ confirm√© scientifiquement üî¨ ‚òùÔ∏è",
  "üëÜ üö® Recherch√© par Interpol üïµÔ∏è pour crimes contre l'humanit√© üé® ‚òùÔ∏è",
  "üëÜ ü•∂ Joue encore √† CS:GO en 640x480 üñ•Ô∏è pour 'meilleure perf' üíæ ‚òùÔ∏è",
  "üëÜ ü¶Ä A remplac√© l'eau üíß par du Monster Energy ‚ö° ‚òùÔ∏èü•§",
  "üëÜ üê¢ Joue avec un PC üíª de 2007 üì¶ et √ßa se voit üëì ‚òùÔ∏è‚åõ",
  "üëÜ üßÇ Se fait mute üîá en 2 rounds üïí pour toxicit√© ‚òùÔ∏èüí¢",
  "üëÜ üêÑ Utilise encore Teamspeak en BIG 2025 ‚òùÔ∏èüìª",
  "üëÜ a d√©j√† bark en vocal pour un knife ‚òùÔ∏èüêï",
  "üëÜ üè≥Ô∏è‚Äçüåà Dans la rue on le confond üßç avec un femboy üíÖ ‚òùÔ∏è‚ú®",
  "üëÜ üß† Se prend pour Aizen Prime üß• mais fait encore pipi au lit üõèÔ∏è ‚òùÔ∏è",
  "üëÜ üé§ A d√©j√† assist√© üìö √† une conf√©rence de Oussama Ammar üíº ‚òùÔ∏èüì¢",
  "üëÜ üëî CEO de la team 21 üïπÔ∏è ‚òùÔ∏èüëë",
  "üëÜ üê∂ Bark en DM üì© pour sa e-girl ‚òùÔ∏è",
  "üëÜ üçï A un r√©gime alimentaire plus choquant üò® que celui d'Hchizen ‚òùÔ∏èü§¢",
  "üëÜ Son QI est plus bas üìâ que son ping üì∂ en pleine game üö®‚òùÔ∏è"
];

// Messages d'erreur
const errorMessages = {
  cooldown: (username, minutes) => `@${username}, tu dois attendre encore ${minutes} minute(s).`,
  animation: (username) => `@${username}, une animation est en cours! Attends qu'elle se termine.`,
  emptyInventory: (username, commandName) => `@${username}, tu n'as pas encore de skins dans ton inventaire. Utilise !${commandName} pour en obtenir!`,
  invalidUser: (username, targetName) => `@${username}, je ne trouve pas d'utilisateur nomm√© "${targetName}" dans mes donn√©es.`,
  invalidItem: (username) => `@${username}, cet item n'existe pas dans ton inventaire.`
};

// R√©ponses aux commandes r√©ussies
const successMessages = {
  knife: (username, rarity, skinName) => `${rarity.emoji} @${username} ${rarity.message}: ${skinName} ${rarity.emoji}`,
  gift: (sender, recipient, rarity, skinName) => `üéÅ @${sender} a offert ${rarity.emoji} ${skinName} √† @${recipient}! Quel acte de g√©n√©rosit√©!`,
  stats: (username, totalCases, bestSkin, bestRarity, distribution) => 
    `@${username}, tu as ouvert ${totalCases} caisses. Ton meilleur skin: ${bestRarity.emoji} ${bestSkin}. Distribution: ${distribution}`
};

// Fonction pour d√©marrer les messages p√©riodiques
function startPeriodicMessages(client, channel) {
  const config = require('./config');
  const { randomFromArray, randomBetween } = require('../utils/helpers');
  
  function sendMessage() {
    const message = randomFromArray(periodicMessages);
    client.say(channel, message);
    
    const nextInterval = randomBetween(
      config.periodicMessages.minInterval,
      config.periodicMessages.maxInterval
    );
    
    setTimeout(sendMessage, nextInterval);
  }
  
  // D√©marrer la s√©quence avec le d√©lai initial
  setTimeout(sendMessage, config.periodicMessages.initialDelay);
}

module.exports = {
  periodicMessages,
  errorMessages,
  successMessages,
  startPeriodicMessages
};